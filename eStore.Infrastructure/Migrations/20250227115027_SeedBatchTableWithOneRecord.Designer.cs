// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eStore.Infrastructure.Data;

#nullable disable

namespace eStore.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250227115027_SeedBatchTableWithOneRecord")]
    partial class SeedBatchTableWithOneRecord
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eStore.Domain.Entity.Batch", b =>
                {
                    b.Property<int>("BatchNumber")
                        .HasColumnType("int");

                    b.Property<string>("BatchDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.HasKey("BatchNumber");

                    b.HasIndex("Product_Id");

                    b.ToTable("Batches");

                    b.HasData(
                        new
                        {
                            BatchNumber = 10200,
                            BatchDetails = "Some details goes here",
                            Product_Id = 1
                        });
                });

            modelBuilder.Entity("eStore.Domain.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateOnly>("PublishDate")
                        .HasColumnType("date");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Logitech",
                            ImageURL = "",
                            LongDescription = "A comfortable and precise wireless mouse with long battery life.",
                            Name = "Wireless Mouse",
                            Price = 25.0,
                            PublishDate = new DateOnly(2024, 1, 15),
                            ShortDescription = "Ergonomic wireless mouse",
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Corsair",
                            ImageURL = "",
                            LongDescription = "High-quality mechanical keyboard with customizable RGB lighting.",
                            Name = "Mechanical Keyboard",
                            Price = 79.0,
                            PublishDate = new DateOnly(2024, 2, 20),
                            ShortDescription = "RGB mechanical keyboard",
                            Stock = 50
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Razer",
                            ImageURL = "",
                            LongDescription = "Noise-canceling gaming headset with high-fidelity surround sound and a detachable microphone.",
                            Name = "Gaming Headset",
                            Price = 60.0,
                            PublishDate = new DateOnly(2023, 1, 25),
                            ShortDescription = "Surround sound gaming headset",
                            Stock = 75
                        });
                });

            modelBuilder.Entity("eStore.Domain.Entity.Batch", b =>
                {
                    b.HasOne("eStore.Domain.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
